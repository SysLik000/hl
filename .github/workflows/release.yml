# This is a basic workflow that is manually triggered

name: Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      level:
        # Friendly description to be shown in the UI instead of 'level'
        description: 'Release type'
        # Default value if no value is explicitly provided
        default: 'minor'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Bump version and make release tag
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install cargo-release
        run: cargo install cargo-release
      - name: Configure git
        uses: fregante/setup-git-token@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: GitHub Action
          email: action@github.com
      - name: Run cargo-release
        run: cargo release ${{ github.event.inputs.level }} --skip-publish --no-confirm
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
  # Publish release
  publish:
    name: Publish for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs: release
    env:
      CARGO: cargo
      TARGET_FLAGS: ''
      TARGET_DIR: ./target
    strategy:
      matrix:
        name: [linux, windows, macos]
        include:
          - name: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: hl
            asset_name: hl-linux.tar.gz
          - name: windows
            os: windows-latest
            artifact_name: hl.exe
            asset_name: hl-windows.zip
          - name: macos
            os: macos-latest
            artifact_name: hl
            asset_name: hl-macos.zip
    steps:
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: pamburus/hl
          prefix: v
        id: find-latest-tag
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.find-latest-tag.outputs.tag }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install Cross
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cross
          echo "::set-env name=CARGO::cross"
          echo "::set-env name=TARGET_FLAGS::--target ${{ matrix.target }}"
          echo "::set-env name=TARGET_DIR::./target/${{ matrix.target }}"
      - name: Build
        run: ${{ env.CARGO }} build --release --locked --verbose ${{ env.TARGET_FLAGS }}
      - name: Package
        if: matrix.os == 'ubuntu-latest'
        run: tar -C "${{ env.TARGET_DIR }}/release" -cz -f "${{ matrix.asset_name }}" "${{ matrix.artifact_name }}"
      - name: Package
        if: matrix.os != 'ubuntu-latest'
        run: 7z a "${{ matrix.asset_name }}" "${{ env.TARGET_DIR }}/release/${{ matrix.artifact_name }}"
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
